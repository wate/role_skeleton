# code: language=ansible
---
# - name: Set Install version variable
#   when: {{ role_name }}_version == 'latest'
#   block:
#     - name: Set Github API request header
#       ansible.builtin.set_fact:
#         github_api_request_headers:
#           Accept: application/vnd.github+json
#     - name: Merge Github API Authorization request header
#       ansible.builtin.set_fact:
#         github_api_request_headers: "{{ '{{ ' }}github_api_request_headers | combine(merge_request_header){{ ' }}' }}"
#       vars:
#         merge_request_header:
#           Authorization: Bearer {{ '{{ ' }}lookup('env', 'GITHUB_TOKEN'){{ ' }}' }}
#       when: lookup('env', 'GITHUB_TOKEN') | length > 0
#     - name: Get latest release
#       ansible.builtin.uri:
#         url: https://api.github.com/repos/{{ '{{ ' }}{{ role_name }}_repo{{ ' }}' }}/releases/latest
#         headers: "{{ '{{ ' }}github_api_request_headers{{ ' }}' }}"
#       register: latest_releases
#     - name: Set package version variable
#       ansible.builtin.set_fact:
#         {{ role_name }}_version: "{{ '{{ ' }}latest_releases.json.tag_name{{ ' }}' }}"
# - name: Set package file variable
#   ansible.builtin.set_fact:
#     asset_file: {{ role_name }}_{{ '{{ ' }}{{ role_name }}_version[1:]{{ ' }}' }}_{{ '{{ ' }}arch_type_maps[ansible_facts['architecture']]{{ ' }}' }}.deb
#   vars:
#     arch_type_maps:
#       x86_64: amd64
#       aarch64: arm64
# - name: Install {{ role_name }}
#   ansible.builtin.apt:
#     deb: https://github.com/{{ '{{ ' }}{{ role_name }}_repo{{ ' }}' }}/releases/download/{{ '{{ ' }}{{ role_name }}_version{{ ' }}' }}/{{ '{{ ' }}package_file{{ ' }}' }}
- name: Install {{ role_name }} packages
  ansible.builtin.apt:
    name: "{{ '{{ ' }}{{ role_name }}_packages{{ ' }}' }}"
